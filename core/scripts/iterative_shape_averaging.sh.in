#!/bin/sh

##
##  Copyright 2009 SRI International
##
##  This file is part of the Computational Morphometry Toolkit.
##
##  http://www.nitrc.org/projects/cmtk/
##
##  The Computational Morphometry Toolkit is free software: you can
##  redistribute it and/or modify it under the terms of the GNU General Public
##  License as published by the Free Software Foundation, either version 3 of
##  the License, or (at your option) any later version.
##
##  The Computational Morphometry Toolkit is distributed in the hope that it
##  will be useful, but WITHOUT ANY WARRANTY; without even the implied
##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License along
##  with the Computational Morphometry Toolkit.  If not, see
##  <http://www.gnu.org/licenses/>.
##
##  $Revision$
##
##  $LastChangedDate$
##
##  $LastChangedBy$
##

CMTK_BINDIR=@CMTK_BINDIR@
 
# Get the utilities.sh script from the scripts/ directory in the CMTK source tree
. ${CMTK_BINDIR}/utilities.sh
 
# For convenience and readability
cmtk()
{
  ${CMTK_BIN_DIR}/$*
}

# Get first argument out of a list
get_first()
{
    echo $1
}
 
# Get all but first from a list.
get_all_but_first()
{
    shift
    echo $*
}
 
# We should have received a list of all images via the command line
IMAGES="$*"
 
# We take the first image in the list as the initial reference
INITIAL_REFERENCE=`get_first ${IMAGES}`

# Everything else is the initial list of floating images
INITIAL_FLOATING=`get_all_but_first ${IMAGES}`
 
# This function will compute the affine alignments of one image to the initial reference.
pass0()
{
  local in_ref=${INITIAL_REFERENCE}
  local ref_name=`basename ${in_ref} | sed 's/\..*//g'`
  for in_flt in ${INITIAL_FLOATING}; do
      local flt_name=`basename ${in_flt} | sed 's/\..*//g'`
      local out_xfm=isa/pass0/${ref_name}_${flt_name}.xform
      if needs_update_and_lock ${out_xfm} ${in_ref} ${in_flt}; then
	  cmtk registration --auto-multi-levels 5 -v --dofs 6 --dofs 9 -o ${out_xfm} ${in_ref} ${in_flt}
	  lockfile_delete ${out_xfm}
      fi
  done
}
 
# Run this for all cases (except reference)
pass0
