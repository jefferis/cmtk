#!/bin/bash

##
##  Copyright 2012 SRI International
##
##  This file is part of the Computational Morphometry Toolkit.
##
##  http://www.nitrc.org/projects/cmtk/
##
##  The Computational Morphometry Toolkit is free software: you can
##  redistribute it and/or modify it under the terms of the GNU General Public
##  License as published by the Free Software Foundation, either version 3 of
##  the License, or (at your option) any later version.
##
##  The Computational Morphometry Toolkit is distributed in the hope that it
##  will be useful, but WITHOUT ANY WARRANTY; without even the implied
##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License along
##  with the Computational Morphometry Toolkit.  If not, see
##  <http://www.gnu.org/licenses/>.
##
##  $Revision: 4473 $
##
##  $LastChangedDate: 2012-08-08 14:51:14 -0700 (Wed, 08 Aug 2012) $
##
##  $LastChangedBy: torsten_at_home $
##

CMTK_BINARY_DIR=@CMTK_BINARY_DIR_CONFIG@
CMTK_DATA_DIR=@CMTK_DATA_DIR_CONFIG@
 
# Get the cmtk_functions.sh script from the scripts/ directory in the CMTK source tree
. ${CMTK_BINARY_DIR}/cmtk_functions.sh
. ${CMTK_BINARY_DIR}/ncanda_setup.sh

#
# Setup input and output
#

OUTDIR=$1
INPUT_T1=$2
INPUT_T2=$3

#
# 1 - Bias field correcton
#

mrbias()
{
    local chn=$1
    local inp=$2

    local mrbias_args="$3"

    local out=${OUTDIR}/mrbias/${chn}.nii
    local msk=${OUTDIR}/mrbias/${chn}_mask.nii

    if needs_update_and_lock ${out} ${inp}; then
	# make foreground mask
	local tmpdir=`mktemp -d`
	cmtk registrationx ${CMTK_GLOBAL_ARGS} --omit-original-data --dofs 6,9,12 --auto-multi-levels 5 --ncc --prune-histogram-ref 128 --init com -o ${tmpdir}/xform ${inp} ${CMTK_DATA_DIR}/sri24/sri24_${chn}_whole.nii
	cmtk reformatx ${CMTK_GLOBAL_ARGS} -o ${tmpdir}/mask.nii --pv --floating ${CMTK_DATA_DIR}/sri24/sri24_brainmask.nii ${inp} ${tmpdir}/xform
	cmtk convertx ${CMTK_GLOBAL_ARGS} --dilate 5 ${tmpdir}/mask.nii ${msk}
	rm -rf ${tmpdir}

	# run bias field correction
	cmtk mrbias ${CMTK_GLOBAL_ARGS} ${mrbias_args} -M 2 --log-intensities --mask ${msk} ${inp} ${out}
	lockfile_delete ${out}
    fi
}

mrbias t1 ${INPUT_T1} "--sampling-density 0.025"
mrbias t2 ${INPUT_T2} "--sampling-density 0.01"

t1_mrbias=`get_override_file ${OUTDIR}/mrbias/t1.nii`
t2_mrbias=`get_override_file ${OUTDIR}/mrbias/t2.nii`

#
# 2 - Align T1 and T2 weighted images
#

t1t2_affine=${OUTDIR}/registration/t1_t2/affine.xform
if needs_update ${t1t2_affine}; then
    cmtk registrationx ${CMTK_GLOBAL_ARGS} --dofs 6,9,12 --auto-multi-levels 4 --init physical -o ${t1t2_affine} ${t1_mrbias} ${t2_mrbias}
    lockfile_delete ${t1t2_affine}
fi
t1t2_affine=`get_override_file ${t1t2_affine}`

#
# 3 - T2 image skull stripping
#

[ -d ${OUTDIR}/stripped ] || mkdir -p ${OUTDIR}/stripped

t2_mask=${OUTDIR}/stripped/t2_mask.nii
t2_brain=${OUTDIR}/stripped/t2_brain.nii

if needs_update_and_lock ${t2_mask} ${t2_mrbias}; then
    fsl bet ${t2_mrbias} ${OUTDIR}/stripped/t2 -R -f 0.5 -g +0.0 -m -n -v
    lockfile_delete ${t2_mask}
fi

t2_mask=`get_override_file ${t2_mask}`
t2_brain=`get_override_file ${t2_brain}`

#
# 4 - map T2 mask to T1 image
#

t1_mask=${OUTDIR}/stripped/t1_mask.nii
if needs_update_and_lock ${t1_mask} ${t2_mask} ${t1t2_affine}; then
    cmtk reformatx ${CMTK_GLOBAL_ARGS} --pv -o ${t1_mask} --floating ${t2_mask} ${t1_mrbias} ${t1t2_affine}
    lockfile_delete ${t1_mask}
fi
t1_mask=`get_override_file ${t1_mask}`

t1_brain=${OUTDIR}/stripped/t1_brain.nii
if needs_update_and_lock ${t1_brain} ${t1_mask}; then
    cmtk convertx ${CMTK_GLOBAL_ARGS} --set-padding 0 --mask ${t1_mask} ${t1_mrbias} ${t1_brain}
    lockfile_delete ${t1_brain}
fi
t1_brain=`get_override_file ${t1_brain}`

#
# 5 - affine alignment with SRI24 atlas
#

sri24_t1=${CMTK_DATA_DIR}/sri24/sri24_t1.nii

t1_sri24_affine=${OUTDIR}/registration/sri24/affine/t1_atlas.xform
if needs_update_and_lock ${t1_sri24_affine} ${t1_brain}; then
    cmtk registrationx ${CMTK_GLOBAL_ARGS} --dofs 6,9,12 --auto-multi-levels 5 --ncc --init com -o ${t1_sri24_affine} ${t1_brain} ${sri24_t1}
    lockfile_delete ${t1_sri24_affine}
fi
t1_sri24_affine=`get_override_file ${t1_sri24_affine}`

#
# 6 - nonrigid alignment with SRI24 atlas
#

t1_sri24_warp_args="-e 16 --coarsest 4 --sampling 2 --accuracy 0.1 --grid-spacing 40 --refine 4 --delay-refine --energy-weight 1e-3"

t1_sri24_warp=${OUTDIR}/registration/sri24/warp/t1_atlas.xform
if needs_update_and_lock ${t1_sri24_warp} ${t1_sri24_affine}; then
    cmtk warp ${CMTK_GLOBAL_ARGS} ${t1_sri24_warp_args} -o ${t1_sri24_warp} ${t1_sri24_affine}
    lockfile_delete ${t1_sri24_warp}
fi
t1_sri24_warp=`get_override_file ${t1_sri24_warp}`

sri24_t1_warp=${OUTDIR}/registration/sri24/warp/atlas_t1.xform
if needs_update_and_lock ${sri24_t1_warp} ${t1_sri24_affine}; then
    cmtk warp ${CMTK_GLOBAL_ARGS} ${t1_sri24_warp_args} -o ${sri24_t1_warp} --switch ${t1_sri24_affine}
    lockfile_delete ${sri24_t1_warp}
fi
sri24_t1_warp=`get_override_file ${sri24_t1_warp}`

#
# 7 - reformat SRI24 tissue priors
#

priors=""
for tissue in CSF GM WM; do
    prior_tmp=${OUTDIR}/segment/priors/sri24_${tissue}.nii
    priot_inp=${CMTK_DATA_DIR}/sri24/sri24_pbmap${tissue}.nii

    if needs_update_and_lock ${prior_tmp} ${t1_sri24_warp}; then
	cmtk reformatx ${CMTK_GLOBAL_ARGS} --linear -o ${prior_tmp} --floating ${prior_inp} ${t1_brain} ${t1_sri24_warp}
	lockfile_delete ${prior_tmp}
    fi

    if [ -e ${prior_tmp}.gz ]; then
	priors+=" ${prior_tmp}.gz"
    else
	priors+=" ${prior_tmp}"
    fi
done

#
# 8 - tissue classification
#

[ -d ${OUTDIR}/segment ] || mkdir -p ${OUTDIR}/segment

t1_seg=${OUTPUT}/segment/t1_seg.nii
if needs_update_and_lock ${t1_seg} ${priors}; then
    fsl fast -A ${priors} -a ${FSLDIR}/src/flirt/flirtsch/ident.mat -P -v -o ${OUTPUT}/segment/t1 ${t1_brain}
    lockfile_delete ${t1_seg}
fi
t1_seg=`get_override_file ${t1_seg}`
