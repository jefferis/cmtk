#!/bin/sh

##
##  Copyright 2012 SRI International
##
##  This file is part of the Computational Morphometry Toolkit.
##
##  http://www.nitrc.org/projects/cmtk/
##
##  The Computational Morphometry Toolkit is free software: you can
##  redistribute it and/or modify it under the terms of the GNU General Public
##  License as published by the Free Software Foundation, either version 3 of
##  the License, or (at your option) any later version.
##
##  The Computational Morphometry Toolkit is distributed in the hope that it
##  will be useful, but WITHOUT ANY WARRANTY; without even the implied
##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License along
##  with the Computational Morphometry Toolkit.  If not, see
##  <http://www.gnu.org/licenses/>.
##
##  $Revision$
##
##  $LastChangedDate$
##
##  $LastChangedBy$
##

#
# See if a manual override file exists for a given (input) file. An override file inserts
#  'manual/' into the file system path immediately prior to the file's base name.
#
get_override_file()
{
    local fpath=$1

    local fdir=`dirname $fpath`
    local fbse=`basename $fpath`

    local manual=${fdir}/manual/${fbse}
    if [ -e ${manual} ]; then
	echo ${manual}
	return
    else
	for compress in gz xz bz2 Z; do
	    if [ -e ${manual}.${compress} ]; then
		echo ${manual}
		return
	    fi
	done
    fi

    echo $fpath
}

##
## Determine number of CPUs allocated to this job.
##

if [ "${PBS_NUM_PPN}" != "" ]; then
    export CMTK_NUM_THREADS=${PBS_NUM_PPN}
    export IGS_NUM_THREADS=${PBS_NUM_PPN}
    export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=${PBS_NUM_PPN}
fi

##
## Determine and cd into submission directory
##
if [ "${PBS_O_WORKDIR}" != "" ]; then
    cd ${PBS_O_WORKDIR}
fi

##
## Determine virtual memory limit and set for Camino/Java
##
vmem=`ulimit -v`
if [ "${vmem}" != "unlimited" ]; then
    # divide by 2 to be safe, and by 1000 to go from Kbytes (ulimit) to MBytes (camino/java)
    javamem=`expr ${vmem} / 2000`
    export CAMINO_HEAP_SIZE=${javamem}
fi

#
# Set up FSL
#

export FSLDIR=${FSLDIR:-@CMTK_FSLDIR@}

if [ "${FSLDIR}" = "" ]; then
    echo "ERROR: must set 'FSLDIR' environment variable to FSL root directory"
    exit 1
fi

FSL_SH=${FSLDIR}/etc/fslconf/fsl.sh
if [ ! -e ${FSL_SH} ]; then
    echo "ERROR: FSL configuration script ${FSL_SH} does not exist."
    exit 1
fi

. ${FSL_SH}

fsl()
{
    ${FSLDIR}/bin/$*
}



#
# Set up Camino
#

export CAMINO_DIR=${CAMINO_DIR:-@CMTK_CAMINO_DIR@}

if [ "${CAMINO_DIR}" = "" ]; then
    echo "ERROR: must set 'CAMINO_DIR' environment variable to Camino root directory"
    exit 1
fi

camino()
{
    ${CAMINO_DIR}/bin/$*
}


