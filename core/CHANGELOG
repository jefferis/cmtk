Release CMTK-1.3.0:

- Added: filter, levelset, make_initial_affine, mrbias, and reformatx tools
    now support database updating.
- Added: database backend for storing images and transformations between their
    coordinate spaces.
- Added: "convertx --binarize-thresh" operation
- Bugfix: shared-library build configuration was broken.
- Bugfix: "convertx --mask-inverse" was broken.
- Added: "mk_phantom_3d" tool can now import either an image including
    existing pixel data or just the grid geometry.
- Added: "mk_phantom_3d" tool now supports three different coordinate modes:
    absolute, relative, indexed.
- Added: "--revert" image operation for "imagemath" tool to revert binary
    masks.
- API: moved "DrawXXX" members from "DataGrid" class into a new, dedicated
    painter class, "UniformVolumePainter."
- Added: image operation for medial skeleton based on analysis of the Hessian
    eigensystem. Note that this is currently broken and only kept for future
    investigation.
- Added: two differential operator members for "UniformVolume" class, one for
    gradient and one for Hessian matrix, each implemented using central
    differences.
- Added: symmetric eigensystem can now be sorted either by absolute or by
    actual eigenvalues.
- Bugfix: UniformDistanceMap constructor failed to copy orientation and
    space-related information from input UniformVolume object
- Added: Euclidean distance map computation in "convertx" tool.
- Added: "warpx" and "congeal_warp" can now do repeated histogram-based
    intensity matching of floating to reference image, with a transfer
    function that changes as warping progresses and thus takes into account
    shifting volume proportions.
- Added: "convertx" now does histogram equalization. Also added tests.
- Refactored: created a new class for histogram-based intensity matching,
    cmtk::HistogramMatchingLookup.
- Added: first library-level tests for TypedArray class.


Release CMTK-1.2.2 (2010-02-25):

- Added: cmtk::SQLite wrapper class for sqlite3 library, with tests.
- Added: bundled still-unused sqlite3 "library" for future use in
    image/relationship database.
- Added: "imagemath" now has "min-value" and "fill" operations.
- Improved: "imagemath" can now set, unset, and change padding value
    repeatedly, so different images can be read with different padding values
    (Issue #4597)
- Improved: better separation of code for DICOM vs non-DICOM configuration.
- Improved: code for PGM output (8 and 16 bit) now more consistent and less
    complex. Also unified API for 8bit  and 16bit write functions.
- Added: bitwise "and" operation in "imagemath" tool. Added test for this.
- Testing: added tests for cmtk::TypedArraySimilarity class.
- Fixed: TypedArraySimilarity::GetPeakSignalToNoiseRatio was broken due to
    negated GetMeanSquaredDifference return value.
- Testing: added tests for cmtk::ScalarImageSimilarity class (and, by
    extension, cmtk::TypedArraySimilarity as well).
- Removed: obsolete "ImageIO" class was removed; the only two remaining former
    derived classes, cmtk::PGM and cmtk::DICOM, will now be used directly, as
    they only have static member functions left.
- Fixed: initialize memory for Analyze header with zeroes in "mk_analyze_hdr"
    tool.
- Testing: added tests for "mk_analyze_hdr" tool.
- Testing: added tests for "mat2dof" tool.
- Fixed: "mip" tool did not compute projection images with proper pixel sizes
    based on the input volume.
- Testing: added tests for "mip" tool.
- Improved: "mip" tool now sets black and white points automatically if not
    provided by the user.
- Testing: added test for "Rohlfing" single-image intensity-consistent
    filtering in "filter" tool.
- Removed: further removal of obsolete PGM and DICOM I/O code.


Release CMTK-1.2.1 (2010-02-01):

- Added: "statistics" tool now optionally outputs mask-based results for all
    up to a user-provided maximum label, even if not all labels in the range
    actually occur in the mask.
- Added: "convertx" tool now does thresholding above and below threshold, to
    threshold and to padding.
- Added: re-added missing "--fast" switch for warp and warpx tools.
- Added: "imagemath" can now threshold above and below given values.
- Added: "convertx" tool can now rescale image intensities to target range
    using "--scale-to-range" operation.

- Fixed: reading empty (i.e., zero pixels) images crashed the toolkit
- Fixed: "reformatx" did not respect user-defined padding value when computing
    Jacobian maps (Issue #4564).
- Fixed: label mode of "avg_adm" tool was broken.
- Fixed: "avg_adm" now gives consistent results regardless of number of
    CPUs. Also fixed minor bug that would have broken this altogether if there
    were more CPUs than pixels in an image row.
- Fixed: "avg_adm" tests crashed on MPI; bug also affected non-MPI build
    (Issue #4571).
- Fixed: "statistics" now tests whether grid of mask volume matches that of
    statistics volume.

- Testing: run all warp and warpx tests in "fast" mode
- Testing: added tests, inputs, and baselines for "avg_adm" tool.

- Removed: deformation strain tensor computation was untested and unused; thus
    removed.
- Removed: partial read support for AVW file format removed
- Removed: support for legacy typedstream studies removed; Nrrd should be able
    to replace this if needed.
- Removed: obsolete IO code for DCM tags etc.

Release CMTK-1.2.0 (2010-01-06):

- Added: cmtk::Console can now determine terminal line width on POSIX systems,
    and this is used by cmtk::CommandLine to format command line help output
    with the correct line breaking.
- Added: new, experimental implementation of pairwise image registration,
    with more accurate metric computation and support for arbitrary floating
    image interpolation. These are accessible through the new "registrationx"
    command line tool.
- Added: single-step mass-preserving reformatting in reformatx tool. Also
    added a new test to cover this.
- Added: "convertx" tool, which will replace "convert" in the long term but is
    designed to apply all operations given on the command line in the exact
    order that they are specified and with arbitrary repetitions. This is in
    response to Issue #3784.

- Improved: more sophisticated install and packaging configuration; still not
    fully clear how that translates into separated packages for different
    components.
- Improved: ported everything related to Qt to use the actual Qt4 classes, so
    we can finally get rid of legacy Qt3 support classes. This should reduce
    the number of actually unused dynamic libraries, which we previously had
    to link against.
- Improved: numerous small improvements to triplanar viewer
- Improved: dcm2image tool now numbers images only if there would otherwise be
    filename collisions. The printf()-type numbering has been replaced with
    two new output path substitutions, "%n" and "%N". Both expand to the empty
    string when a path is already unique without numbering. Otherwise, "%n"
    substitutes to an increasing number, and "%N" substitutes to the same
    number with a leading dash, "-". So using "./%n/image%N.nii" generates a
    single file ".//image.nii" if that is a unique path, or a sequence of
    images "./1/image-1.nii", "./2/image-2.nii" for up to ten colliding
    paths. For larger numbers of collisions, the number of digits is
    automatically increased as necessary.
- Improved: command line callback error handling was ugly and tedious; now
    using exceptions to achieve the same effect.

- Changed: in API, all volume "origin" fields were renamed to "offset" to
    avoid confusion with "origin" of coordinate spaces.

- Fixed: bundled DICOM library finally works on all tested platforms and all
    tested compilers.
- Fixed: compile error on latest Mac/Intel gcc due to undefined "ushort"
    type.
- Fixed: triplanar can now be called again with no parameters to open empty
    viewer UI.
- Fixed: set coordinate space meta information for user-defined target grid in
    "reformatx" tool.
- Fixed: using Sun's compiler, there was a problem with the timely
    initialization of SmartPointer<...>::Null when such an object was used in
    the global scope. This led to crashing volume_injection and
    volume_reconstruction tools.

- Removed: support for AMD Core Math Library (ACML), which was rarely used and
    complicated code unnecessarily
- Removed: push-forward function of reformatx has long been obsolete because
    we can invert any transformation and switch reference and floating image,
    to achieve the same effect.
- Removed: "Binary" data class; this should really be treated as "Labels"
    anyway.
- Removed: for now, we are dropping support for system-installed DCMTK
    libraries. The configuration of these was a complete hack anyway. For the
    time being, we will rely exclusively on the bundled, stripped-down version
    of the toolkit for DICOM support.

- Testing: support for baselines local to each build. If a baseline exists in
    testing/baseline/${TESTNAME}, then it will be used. Otherwise, the global
    baseline as configured by the CMTK_DATA_ROOT top-level CMake variable is
    used.
- Testing: added tests for manual target grid definition in "reformatx" tool.


Release CMTK-1.1.3 (2009-11-18):

- Added: new tool, xform2scalar, to extract scalar measures from deformation
    fields or transformations. This, in combination with "statistics" and
    "sequence" tools, obsoletes the old (and inappropriately named)
    "deformation_field" tool.
- Added: scripts for multi-NEX motion correction and iterative shape averaging
    are now configured in build tree and installed in install tree. These (and
    future scripts) will also be included in installable packages.
- Added: B-spline transformation can now be written in ITK file format, thus
    allowing direct import of "warp" transformations into 3D Slicer.
- Added: new binary builds for Solaris on i386 and x86_64 using SunPro CC
    compiler.

- Removed: obsolete "deformation_field" tool.

- Fixed: average_images tool was broken.
- Fixed: numerous unitialized variables and other things that tripped valgrind
    memory checker.
- Fixed: some more missing tests were added to the configuration of the
    bundled D(4)CMTK library.
- Fixed: cmake file to set up tests when no hash map implementation is found
    cannot set properties for mcwarp and mcaffine tests.
- Fixed: numerous compile errors using Sun CC compiler
- Fixed: incomplete Wiki markup of command line help due to incorrectly
    overloaded virtual member function
- Fixed: re-worked CMake build system to eliminate redundant repeated
    libraries
- Fixed: re-arranged "warp" command line parameters to avoid crashing Slicer,
    as it does not allow optional non-option parameters
- Fixed: signal handler functions are now 'extern "C"' to avoid potential
    problems of conflicting linkage
- Fixed: margins for line breaking not correct in Console::FormatText

- Improved: better, more data-drive automatic initialization of optimizer step
    sizes and image sampling parameters in pairwise rigid and nonrigid
    registration.
- Improved: more explicit handling of effective reference and floating volume
    in pairwise registration classes.

- Testing: added tests and baselines for average_images tool.


Release CMTK-1.1.2 (2009-10-28):

- Added: new multi-threading framework based on pools of continuously running
    threads. This should reduce thread creation overhead and also improve
    scheduling by allowing load balancing using over-partitioned tasks, i.e.,
    tasks split into substantially more parts than the number of CPUs.
- Added: logit and logistic functions for imagemath tool, for single and
    multiple images.
- Added: imagemath tool "--match-histograms" operation matches the intensity
    distribution of one image to that of another.
- Added: imagemath tool now supports image data padding.

- Fixed: basic reformatting in groupwise registration used slightly broken
    partitioning for SMP computation. This has been fixed.
- Fixed: NIFTI reader was not able to read files with detached 348-byte
    headers, i.e., headers without "extension" field.
- Fixed: BioRad header problem resulting from struct field alignment (patch by
    Greg Jefferis).
- Fixed: TemplateArray::GetRangeTemplate() now ignores non-finite values, which
    also fixes a crash in triplanar viewer when reading images with non-finite
    values.

- Improved: switched long and short options in command line help and wiki
    markup outputs.


Release CMTK-1.1.1 (2009-09-02):

- Added: "congeal" and "congeal_warp" now optionally match image histograms to
    either template data (if template data is used for registration) or first
    image (if no template is defined or its data is not used).
- Added: groupwise, pairwise, and multi-channel registration tools now each
    support "--delta-f-threshold" option to define termination threshold for
    optimization based on relative target function change.

- Fixed: configuration of type sizes in bundled DICOM library was broken.
- Fixed: file system functions were borken on Windows (MS-VS build) due to use
    of Unix-style directory separators ('/' vs. '\').

- Improved: command line options for "congeal" and "congeal_warp" tools
    streamlined and grouped.
- Improved: help and wiki outputs of command line tool option descriptions now
    include textual descriptions of the argument expected by each option,
    e.g., "float", "string", "image-path".

- Removed: "Mutual Information" variant of RMI-based groupwise registration
    deleted; this turned out to be almost zero and thus useless. For now,
    we're left with optimizing the approximated joint entropy.

- Testing: added tests for all registrations using DeltaF threshold.


Release CMTK-1.1.0 (2009-08-26):

- API: no longer allow short-only options for command lines.
- API: cmtk::SmartPointer now supports smart pointers to constant objects for
    improved const-consistency.
- API: begin decoupling the actual transformation classes (e.g.,
    SplineWarpXform) from their reference image grids (used for
    precomputations). Instead, use classes like the new
    SplineWarpXformUniformVolume to tie both together, thus allowing more
    transformation objects to remain const in more situations (see, for
    example, modified implementation of ReformatVolume::WarpXform).
- API: all "...NonVirtual" member functions replaced their virtual
    counterparts and became virtual themselves.
- API: decoupled VTK and non-VTK landmark code so only one tool,
    align_landmarks, still needs to be linked against the VTKWrapper and VTK 
    libraries.
- API: re-worked progress reporting to support multiple-level nested tasks
- API: removed some residual legacy preprocessor definitions

- Changed: command line tools now need to "opt-in" for XML support. This is to
    prevent cluttering Slicer's menu with modules that do not actually support
    it.
- Changed: finally eliminated all those affine transformation inversions in
    the rigid registration framework that have been a pain for over ten
    years. CAUTION! This changes the outcomes of both affine and warp
    registrations, usually just slightly, but in unstable cases potentially by
    a lot.

- Fixed: mk_analyze_hdr command line option "--description" was broken.
- Fixed: contrary to the Wiki, NMI was the default registration criterion used
    in "film." This has now been changed to MSD, which is most approriate for
    within-modality registration.
- Fixed: ReformatVolume::CheckerboardMode was not initialized
- Fixed: ReformatVolume::CreateInterpoaltor did not support partial volume
    interpolation.
- Fixed: ReformatVolume::MakeTargetImage did not create a grid with proper
    geometry (i.e., offset, direction matrix, meta data).
- Fixed: conversion of non-axial Analyze images to Nrrd produced output file
    that was missing coordinate space definition.
- Fixed: a critical bug that effectively broke all multi-threaded computations
    on Windows (using MS compilers).

- Added: all tools now support "--echo" command line switch, which dumps the
    command line to stdout before continuing with the program.
- Added: the "levelset" and "film" tools now fully support the Slicer3
    execution model. Support in "mrbias" tool has also been improved.
- Added: new "asegment" tool for atlas-based segmentation
- Added: command line class now automatically generates command line syntax
    description for "--help" output, unless a syntax description string is
   explicitly set.
- Added: cmtk::CommandLine class now permits arbitrary-typed variables to be
    set by command line enum parameter groups.
- Added: new optional "asegment_sri24" tool for atlas-based segmentation using
    the SRI24 atlas (currently available only separately from
    http://nitrc.org/projects/sri24/).
- Added: "warp" and "registration" tools now support writing of the
    reformatted floating image without requiring a separate tool, such as
    refortmatx. This makes integration into Slicer much more convenient.
- Added: support Slicer3's XML-based progress reporting, and auto-detect
    Slicer's presence to switch between standard console progress output and
    XML-based output.
- Added: automatic Wiki markup printing of command line options
- Added: export and import of affine transformations in ITK file format for
    exchange with Slicer.
- Added: new class, cmtk::TransformationToNativeSpacesAffine, to change an
    affine transformation under changes of reference and floating image
    coordinate spaces.
- Added: intensity adjustment of floating image in affine and B-spline
    registration using histogram matching

- Removed: multiple redundant command line parameters of the "warp" tool have
    been retired. We are only retaining options that differ from the default
    values.


Release CMTK-1.0.2 (2009-07-24):

- API: all igsGetSetXXX macros are now cmtkGetSetXXX, and they all define the
    field name with a "m_" prefix to avoid type/field name collisions.
- API: more elegant design of noise estimator classes that work on TypedArray
    objects. Mike's experimental ML noise estimator implementations moved to
    "Unstable" library.
- API: new wrapper class "cmtk::HashMapSTL" hides the various STL hash map
    implementations and also adds support for upcoming standard unordered_map
    class.

- Added: source tree now incorporates minimal subset of DCMTK files so we can
    build DICOM support without external dependencies, even on Windows using
    VisualStudio.
- Added: "mcaffine" tool now accepts user-provided initial transformation from
    file [Tracker #3925].
- Added: cmtk::CommandLine class now automatically prints parameter defaults
    in "--help" output.

- Fixed: numerous uninitialized data situations identified by valgrind memory
    checker
- Fixed: incomplete computation when using "--sampling-density" option of
    "congeal" tool.
- Fixed: Slicer can now detect CMTK tools as plugins via their response to
    "--xml"; note that the XML description itself is not fully correct and
    functional yet.
- Fixed: testing and configuration were out of order in top-level
    CMakeLists.txt, resulting in build problems.
- Fixed: "film" tool now uses anisotropic Gaussian kernel for volume
    injection [Tracker #3945].
- Fixed: volume injection should use reconstructed image pixel size to scale
    Gaussian kernel, not pass image pixel size. Pass image size depends on
    number of passes, whereas point spread function does not.

- Improved: eliminated explicit offset calculations in cmtk::DataGrid and use
    existing index-to-offset function instead.
- Improved: instead of trying to figure out what STL version provides, or does
    not provide, a 64bit integer hash function specialization, we simply provide a
    generic hash function ourselves, which works on all platforms.

- Testing: added an experimental build with valgrind/memcheck memory checking
    to discover further issues with uninitialized data etc.
- Testing: support for automated memory testing using valgrind etc.
- Testing: added test for multi-channel affine registration using histograms
- Testing: added actual multi-channel registration test, and test for mcwarp
- Testing: added test for importing deflate-compress DICOM images


Release CMTK-1.0.1 (2009-06-25):

- API: changed XformList::Apply to XformList::ApplyInPlace

- Build: added missing applications "regress" and "probe_xform" to default
    build again.

- Changed: probe_xform tool now uses different command line semantics. All
    transformations are concatenated rather than applied separately.

- Added: normal vector of InfinitePlane can now be set directly.
- Added: "sympl" tool can now use different approximated symmetry plane
    orientations to begin search, supporting non-sagittal symmetry planes
    [Tracker #3834].
- Added: established infrastructure for optional algorithm validation,
    beginning with rigid registration. All validation tools must be activated
    via the "BUILD_VALIDATION" option of the top-level CMakeLists.txt file
- Added: tools for rigid registration validation using data from the
    Retrospective Image Registration Evaluation project.
- Added: "registration" tool now supports on-the-fly Sobel edge filtering, and
    histogram equalization was unified with "warp" tool's.

- Fixed: cmtkVoxelMatchingAffineFunctional.h compile error when SMP is turned
    off.
- Fixed: crash of average_affine tool when run with no parameters 
    [Tracker #3841]

- Improved: AffineRegistration and ElasticRegistration now use a new, unified
    image preprocessing class for things like cropping, histogram
    equalization, etc.

- Removed: obsolete cmtk::Array class; replace all uses with std::vector


Release CMTK-1.0.0 (2009-06-16):

- API: "TemplateHistogram", "LogTemplateHistogram", and "TemplateHistogram2D"
    renamed to remove "Template" part. Also removed all global histogram
    typedefs (e.g., "UnsignedIntHistogram") to be more flexible with
    conditional instantiations
- API: "Histogram2D" renamed to "JointHistogram".
- API: all "VM_" class prefixes replaced with more explicit "VoxelMatching"

- Documentation: added extensive documentation with code examples for several
    key classes.

- SVN: moved test data out of "core" tree and into "data"; allow configuration
    of separate (shared) data tree from top-level CMake file

- Added: MiniXML library included in source tree for all upcoming XML needs.
- Added: initial support for XML command line parameter descriptions. Mostly
    infrastructure work to make sure XML can be generated by CommandLine
    class with minimal extra programmer involvement
- Added: cmtk::Console can now typeset text with given margin and width.
- Added: Windows implementation of mutex lock.
- Added: cmtk::StdOut stream
- Added: "--auto-multi-levels" option for registration tool. Selects automatic
    resolution and optimization parameters for given number of levels.
- Added: new top-level configuration option to switch all numerical algorithms
    (i.e., AlgLib) to single-precision floats. This can be used to save memory
    in extreme situations (for example, high-resolution volume reconstruction)
- Added: two new operations for imagemath tool: xor-scalar and contract-labels
- Added: Windows implementation of dcm2image file scanning

- Changed: CMake switches for changing coordinate and data real type are now
    advanced.

- Fixed: numerical instability of correlation coefficient (leading to values
    outside -1..+1, which in turn produced invalid p-values
- Fixed: legacy IGS_MOUNTPOINTS was not considered
- Fixed: principal axes registration was broken [Tracker #3743]
- Fixed: configure problem with bundled zlib, which broke compile of NrrdIO in
    Visual Studio.
- Fixed: Analyze/Nifti images were not written compressed
- Fixed: numerous compiler errors and warnings detected by GCC 4.4

- Improved: simplified code by removing HAVE_ZLIB conditionals. These are now
    always true since we're bundling zlib.
- Improved: use double instead of float for linear model and regression
- Improved: use CMake's FindOpenMP to detect and configure OpenMP
- Improved: prevent configurations where CMTK_USE_THREADS is ON but
    CMTK_BUILD_SMP is OFF.
- Improved: better integration of Doxygen into CMake build system
- Improved: better output of stacked image information in dcm2image
- Improved: pre-defined "--xml" and "--help" command line options can now be
    overridden by library user [Tracker #3830].

- Removed: cmtk::MathUtil::CoefficientOfCorrelation was removed because it
    turned out to be a redundant, numerically unstable variant of
    MathUtil::Correlation
- Removed: deprecated options -m/--metric removed from registration and warp
    tools.
- Removed: obsolete tool skeleton "detect_interleave"
- Removed: obsolete "--threads" option from all remaining command lines; using
    CMTK_NUM_THREADS environment variable is more flexible and versatile.


Release CMTK-0.2.4 (2009-05-11):

- Platforms: vastly improved compatibility with VisualStudio 2008; initial
    implementation of Windows thread parallelism
- Platforms: offer RPM package on Unix/Linux systems and NSIS/ZIP on Windows

- Build: hierarchical SMP control (not complete)

- Changed: symmetry_plane tool now named "sympl"
- Changed: model tool now named "glm"
- Changed: QR decomposition now using AlgLib code

- API: all classes have been moved to cmtk namespace
- API: added "Unstable" library for testing code that is under development.
- API: renamed all file names from igsXXX to cmtkXXX
- API: eliminated obsolete and tedius "igsCoordinateAxis" enum typedef; had to
    change calls to igsUniformVolume::GetDelta() as a result.
- API: moved byte swap functions to System/cmtkMemory.h
- API: renamed most IGS_XXX symbols to CMTK_XXX

- Added: safe C++ array allocator with exception handling; use this for all
    array allocations
- Added: "Unstable" library is no longer built by default, but only when
    enabled in CMake.
- Added: unstable "jidb" tool for joint iterative deblurring
- Added: observe "CMTK_" environment variables in addition to legacy "IGS_"
    variables. The CMTK versions have priority, except for
    IGS_LEGACY_ANALYZE_IO, where either variable will turn legacy mode on.
- Added: "trunc" operator in imagemath tool.
- Added: auto-detect (guess) interleaved axis in interleaved images

- Improved: strict parameter checking for command line callback function
    arguments inside command line class itself

- Testing: three new tests for reformatx tool
- Testing: tests for erosion/dilation in convert tool
- Testing: tests for concat_affine tool
- Testing: tests for mcaffine tool
- Testing: test for paired correlation was using insufficient input data
    (needs at least 2x three images to compute p-values)

- Removed: obsolete VTK/Qt glue glasses
- Removed: obsolete congeal_spim tool
- Removed: obsolete 2d/2d registration tools
- Removed: obsolete GIPL image file format support (never used anyway)
- Removed: obsolete floating-point GCD functions (from virtual uniform grids)
- Removed: obsolete classes cmtkInteraction, cmtkMapFilter (both Pipeline)
- Removed: obsolete cmtkConstants.h header file

- Fixed: division by zero in correlation significance computation
    (https://neuro.sri.com/bugzilla/show_bug.cgi?id=121)
- Fixed: smoothness constraint broken in volume reconstruction
- Fixed: multi-threading problem on cygwin solved
- Fixed: hanging semaphore in congeal_warp using MPI


Release CMTK-0.2.3 (2009-03-20):

- Toolkit: began move of names from "IGS" to "CMTK". 
  Versioning: IGS-X.Y.Z will become CMTK-0.X.Y-Z
  After completed transition we will release CMTK-1.0.0

- API: created new "Numerics" library which will receive all numerical code
    from third-party sources, beginning with L-BFGS-B optimizer from AlgLib

- Added: stack trace printing when SEGFAULT is caught
- Added: multi-class staple algorithm, imagemath function, and tests
- Added: describe now produces machine-readable output; also added tests
- Added: imagemath "average" operation
- Added: log-intensity histograms for entropy estimation in mrbias tool
- Added: support for aynchronous threads, condition variables, semaphores
- Added: more tools now supported within the optional single-command frontend
- Added: bundled zlib library, mostly for Windows
- Added: convert tool now write transformation file corresponding to AutoCrop
- Added: support for writing NIFTI images with detached header (using .img as
    the target file suffix; .hdr remains reserved for Analyze). Also added
    tests for NIFTI conversion.

- Improved: OverlapMeasures class now tests whether a label occurs before
    running through main loop. Should speed up processing when label-to-number
    assignments are sparse.
- Improved: command line class now checkes whether arguments to options are
    valid integers or floating point values and throws exception otherwise.

- Changed: moved label combinations from imagemath.cxx to
    classes in Segmentation library
- Changed: renamed "Supplement" to "System" library

- Bugfix: crash in reformatx when no floating image is given (Issue #95)
- Bugfix: print warnings when length of paths exceeds PATH_MAX
- Bugfix: Print error messages when encountering problems with BioRad files
- Bugfix: wrong crosshair position in triplanar viewer for zoom factors
    smaller than 100% (Issue #103).
- Bugfix: removed workaround for former bug in STL sstream class (read last
    words twice before feof() turns true).
- Bugfix: many compilation and linker issues with VisualStudio
- Bugfix: "registration --initial" inverts imported transformation
    (https://neuro.sri.com/cmtk/bugzilla/show_bug.cgi?id=12)
  This is now covered by three new tests.
- Bugfix: congeal/congeal_warp pairwise registraton outputs problem fixed
    (https://neuro.sri.com/cmtk/bugzilla/show_bug.cgi?id=11)
- Bugfix: catch missing number parameters for STAPLE/mSTAPLE in imagemath
    tool.
- Bugfix: broken multi-class STAPLE algorithm
    (https://neuro.sri.com/cmtk/bugzilla/show_bug.cgi?id=1)
- Bugfix: flag for initial alignment of volume centers was not properly
    initialized in igsAffineRegistration class, which led to failing tests
    (https://neuro.sri.com/cmtk/bugzilla/show_bug.cgi?id=13)

- Testing: added tests and data for "ttest" tool
- Testing: added tests and data for "model" tool
- Testing: added tests for some igsMathUtil functions

Release IGS-2.2.0 (2009-01-27):

- Added: experimental single-binary command wrapper, "cmtk"
- Added: user-defined label offset in overlap computation
- Added: randompxls tool for stereology

- Changed: "--class0" and "--class1" command line options in "similarity" tool
    replaced by "--grey" and "--labels"
- Changed: renamed "fix_interleave_motion" tool to "film"
- Changed: triplanar viewer now read and writes landmarks to/from simple
    text files, rather than typedstream archives.

- Fixed: statistics tool now supports label maps with more than 256 labels.
- Fixed: sequence tool now respects "--format" and "--abs" command line
    options
- Fixed: groupwise registration output messed up image paths when using
    pre-defined template grid.
- Fixed: in congeal tool, step and kernel sizes depended on target images,
    even when pre-defined template grid was used (Issue #81).
- Fixed: centered crosshair on pixel of interest at higher zoom factors in
    triplanar viewer.
- Fixed: statistics tool did not correctly compute entropies in masked mode.

- Removed: Powell/Brent optimizer
- Removed: began separating copyrighted third-party code from main code base
    by putting these code portions into separate files in "copyrighted/"
    sub-directories.
- Removed: groupwise registration based on average of NMI/MI over all images;
    this affects groupwise and groupwise_warp tools as well as several library
    classes.
- Removed: probe_xform tool was duplicating functionality of gregxform
- Removed: window_pgm tool long unused
- Removed: reformat tool long obsoleted by reformatx

- Testing: added tests for "sequence" tool

Release IGS-2.1.6 (2008-11-05):

- Bugfix: "gregxform" did not extract affine transformation from spline
    warp. Pointed out by Greg Jefferis
- Bugfix: "hanging" triplanar viewer in batch mode due to dialog boxes opening
    in certain conditions.

- Added: use template image data in congeal and congeal_warp groupwise
    registration.
- Added: anisotropic volume injection, with tests
- Added: fourth-order error in inverse interpolation volume reconstruction.
- Added: optional exponential notation in statistics tool output

- Improvement: clarified region width vs. radius for median filtering

- Testing: added tests for median filter operator in "convert" tool
- Testing: added tests for "similarity" tool
- Testing: added tests for "mk_phantom_3d" tool
- Testing: added affine gregxform tests
- Testing: added tests for "congeal_warp" tool
- Testing: added tests for "statistics" tool

- Removed: obsolete igsAdaptiveBestNeighbour optimizer


Release IGS-2.1.5 (2008-09-19):

- Bugfix: crash in triplanar when reading multiple images with different
    sizes (Issue #29).
- Bugfix: xform2dfield was not setting B-spline inversion tolerance, so it
    defaulted to zero, which led to excessive inversion failures (Issue #68).
- Bugfix: configuration and compile errors when building with VTK support

- Added: NIFTI image reader and write (Issue #71)
- Added: parameter to set numerical inversion tolerance in xform2dfield tool.
- Added: split tool now optionally generates one output transformation file
    for each output image file (Issue #57). Also updated test driver
    accordingly to cover transformations.
- Added: paired correlation function in ttest tool

- Removed: obsolete igsProjectionImage and igsDRR classes, I/O etc.

- Testing: streamlined appsTestDriver.sh script
- Testing: unified test data for split, unsplit, volume_injection, and
    volume_reconstruction tools (now SPGR, not binary mask).
- Testing: added tests for volume_reconstruction and volume_injection tools


Release IGS-2.1.4 (2008-09-03):

- Added: congeal_warp now supports both exact (previous behavior) and
    volume-fitted control point grid spacing
- Added: volume_injection tool and igsVolumeInjectionReconstruction class

- Improvement: fixed problem with painting outside QWidget::paintEvent() that
    had arisen after porting to Qt4 (Issue #44)
- Improvement: removed source files and classes from gui/fusion/, which
    duplicated files/classes in libs/Qt/
- Improvement: replaced calls to deprecated igsUniformVolume::ProbeNoXform
    with interpolator object in average_edt tool (Issue #25, partial). Test
    baseline changed ever so slightly due to a handful of undecided/decided
    pixels.
- Improvement: replaced calls to deprecated igsUniformVolume::ProbeNoXform
    with interpolator object in similarity tool (Issue #25, partial).

- Bugfix: describe tool now prints actual space units if they exist, or
    "[unknown]" if they do not.
- Bugfix: Nrrd reader now only changes coordinate space to "RAS" if input
    image was defined in anatomy-based coordinate system (RAS, LAS, LPS).
- Bugfix: create igsDataGrid objects without setting anatomical orientation,
    because we may be dealing with non-human data. Instead, set meta data of
    created volumes from input data where possible.
- Bugfix: do not try to assemble volumes from single-slice studies to avoid
    segfaults in dcm2image

- Removed: obsolete igsQtRenderCanvas class
- Removed: atlas-based segmentation and classifier combination classes from
    "Segmentation" library; these were not used anymore but were becoming a
    pain to maintain.
- Removed: warp2raw tool
- Removed: obsolete use of igsProbeInfo in igsRay and igsRayIterator classes.
- Removed: obsolete igsDataGrid::GetProbeInfo and
    igsUniformVolume::ProbeNoXform
- Removed: obsolete igsRay and igsRayIterator classes
- Removed: obsolete igsDataGrid::PartialVolumeInterpolation and
    igsUniformVolume::ProbeNoXformPVI
- Removed: obsolete igsDataGrid::NearestNeighborInterpolation and
    igsUniformVolume::ProbeNoXformNN
- Removed: obsolete igsAFDRRFunctional and igsRegistration2d3d classes.
- Removed: obsolete igsAttenuationField and igsQuadruple classes
- Removed: never used image energy preservation in inverse interpolation, so
    got rid of this.

- Internal: renamed igsPartialVolumeInterpolator to
    igsUniformVolumeInterpolatorPartialVolume

- Changed: "unsplit" is a more appropriate name for "split" tool.


Release IGS-2.1.3 (2008-08-19):

- Added: xform2dfield tool now accepts "--inverse/-i" switch before each
    transformation for optional inversion.
- Added: xform2dfield now accepts "downsample" comment lane switch
- Added: tests for xform2dfield tool.
- Added: test for reformatx tool using deformation field from Nrrd file
- Added: tests for Gaussian filter operator in filter tool.
- Added: volume_reconstruction can now optionally write reconstructed image
    with the lowest maximum (as opposed to mean-squares) error.
- Added: IGS_WRITE_UNCOMPRESSED environment variable can be used to disable
    writing of compressed images (default if compression support is available)
- Added: describe tool now supports explicit reading in RAS coordinates.

- Internal: moved XformList and XformListEntry out of igsReformatVolume class
    to be re-used for other applications.
- Internal: separated igsTypedArray and igsTemplateArray classes into separate
    files.

- Bugfix: deformation field received NaN spacing if constructed from an
    igsUniformVolume with one of the Dims[] equal to 1.
- Bugfix: did not compile with single-precision igsCoordinate
- Bugfix: shift in igsFilterVolume::GaussianFilter with certain kernel
    parameters (Issue #35). Also fixed related issue of empty kernels for
    radius below one pixel.
- Bugfix: compile error using MPI support
- Bugfix: p-values and t-statistics had opposite signs in ttest output.

- Removed: obsolete support for linking against stand-alone full TEEM library
    for Nrrd support.


Release IGS-2.1.2 (2008-08-05):

- Added: user-defined tolerance for floating point comparisons in dcm2image
    tool; this addresses issues with slight changes in direction vectors
    sometimes recorded on our GE scanner within the same volume.
- Added: substitute series description into dcm2image output file names
- Added: make_initial_affine can now center transformation from aligning
    direction vectors in the center of the reference image.
- Added: "join" tool, which complements the existing "split" tool. Also added
    tests, test data, and baseline data.
- Added: tests for histogram tool
- Added: histrogram tool output adds column for cumulative histogram
- Added: statistics tool can now compute percentiles

- Improvement: triplanar viewer now initially sets grey level window to
    encompass 1st through 99th percentile of pixel intensities.

- Changed: similarity tool now write joint histograms only when file names are
    explicitly given on the command line.

- Bugfix: read space units into meta data if they exist in Nrrd input files


Release IGS-2.1.1 (2008-07-30):

- Bugfix: test for NaN high bit in top-level CMakeLists for NrrdIO library
- Bugfix: image orientation-related bugs (e.g., Issue #39).
- Bugfix: igsUniformVolume::GetInterleavedSubVolume did not scale direction
    vector along interleaving axis.
- Bugfix: igsVolumeFromFile::WriteNRRD used transposed index-to-physical
    matrix as direction table.
- Bugfix: igsVolumeFromSlices::FinishVolume used transposed matrix for
    index-to-physical matrix


Release IGS-2.1 (2008-07-29):

- Design: re-worked image orientation code to be more consistent. Now uses
    image axis direction tables for every image, specified as an
    index-to-physical coordinate transformation matrix associated with every
    igsVolume object.

- Added: label stack entropy operator for imagemath tool with test
- Added: test for imagemath vote operator
- Added: regress tool.
- Added: command switch to disabled GE extensions in dcm2image tool, which
    appear to cause problems (not yet fully understood) on occasion.
- Added: dcm2image tool has two new switches that turn off GE extensions (not
    always working properly) and disable orientation checking (scanner does
    not always keep orientation vectors constant to the last decimal). Also
    made dcm2image tool more verbose for diagnosing problems.
- Added: additional tests for split tool, reorient tool, Nrrd I/O.

- Changed: "radius" parameter in igsFilterVolume (and filter tool) is no
    longer relative to filter width, but actual filter radius.

- Bugfix: gracefully handle negative pixel spacing in BioRad images by
    flipping the resulting volume accordingly.
- Bugfix: igsAffineXform::operator= did not copy (and respect)
    m_LogScaleFactors flag.
- Bugfix: igsSplineWarpXform::FindClosestControlPoint was broken
- Bugfix: force reorientation into RAS in places where this was not
    properly done yet.

- Removed: obsolete igsAggressiveDirectionOptimizer
- Removed: obsolete (and no longer complete) support for gantry tilt in CT
    images


Release IGS-2.0.5 (2008-07-09):

- Added: principal axes registration (via make_initial_affine tool), test
    data, and baseline transformations
- Added: "Copy Colormap to Other Images" button in triplanar view (Issue #3).
- Added: "--mul" operator for imagemath tool
- Added: tests and baseline data for groupwise_init, groupwise_rmi, and
    congeal tools
- Added: groupwise_rmi and congeal tools now support "downsample=0" as final
    level, with original image resolution and smoothing turned off.

- Bugfix: igsWarpXform::ReplaceInitialXform would have crashed if a NULL
    pointer was passed to it.
- Bugfix: preserve space axes and direction vectors in 
    igsUniformVolume::GetCroppedVolume()
- Bugfix: centers-of-mass alignment was never working in groupwise_rmi tool;
    therefore delete these command line options. Use groupwise_init tool
    instead.
- Bugfix: groupwise registration functional I/O classes did not use
    ReadOriented() when reading images linked from groupwise archives.
- Bugfix: igsReformatVolume::UseNullValue was never initialized

- Changed: ported GUI classes and applications to Qt4; require at least Qt4.3,
    as we are using features introduced with that version (Issue #13).
- Changed: Analyze output now write binary data first, header then. This way,
    we know that if the header file exists, the data was successfully written.

- Internal: resolved ambiguity between igsMatrix3x3::Invert() and ::Invert3D()
    by renaming these to Inver2x2 and Invert3x3, respectively (Issue #30)
- Internal: igsWarpXform::ReplaceInitialXform now defines NULL as its default
    argument, which is equivalent to bringing the warp into its pure nonrigid
    representation.
- Internal: changed API regarding transformation handed to igsVolumeAxesHash
    constructor; now we no longer look at the volume's own transformation.
- Internal: igsReformatVolume::AffineXform now the actual FORWARD
    transformation, rather than inverse.


Release IGS-2.0.4 (2008-06-27):

- Added: COPYRIGHT and CHANGELOG files are now packaged and installed in
    doc/IGS/ directory
- Added: support for externally specified semantic coordinate systems in Nrrd
    I/O. This is based on the joint effort with Greg Jefferis and the Janelia
    Hackathon crew to standardize file formats and coordinate system
    specifications for insect science
- Added: make_initial_affine tool
- Added: dcm2image can now encode TR and TE in the output image name. It can
    also read and apply the private GE tag that distinguishes real, imaginary,
    magnitude, and phase images.
- Added: test for reorient tool applied to Nrrd
- Added: igsMakeInitialAffineTransformation class
- Added: set colormap in triplanar batch mode; also added test for this
- Added: random RGB colormap for 256 labels; also added test for this
- Added: scalar addition operator for imagemath tool

- Bugfix: when testing for compiler support for in-class initialization of
    static member fields, also test linking. This is necessary to correctly
    test on Mac OS X with GCC 4.0.1 and older
- Bugfix: include image origin in igsUniformVolume::GetCenterOfMass
- Bugfix: igsDataGrid::GetBoundaryMap was broken (did not extract all
    boundaries due to missing upper for loop bounds
- Bugfix: label/user color map lookup was broken
- Bugfix: index was inverted in imagemath tool's MaxIndex operator

- Changed: dcm2image now defaults to sorting image files; this should prevent
    more problems than it creates. A new command line option, "--no-sort",
    turns sorting off if that is the desired behavior.
- Changed: use ctest scripting for dashboards
- Changed: use a single test driver script for all command line tools
- Changed: moved "fusion" subdirectory into "gui" tree


Release IGS-2.0.3 (2008-06-05):

- Added: mk_phantom_3d now accepts input image in which phantom objects can be
    drawn.
- Added: non-numerical command line switches (mi/nmi/cc/cr/msd) for metric in
    affine registration tool.
- Added: test for cropped rigid registration
- Added: test for combine_pca operator in imagemath tool

- Removed: obsoleted complex2real tool (functionality can be achieved using
    imagemath tool)

- Bugfix: reorient tool did not actually reorient to specified output
    orientation
- Bugfix: fix_interleave_motion used hamming sinc instead of cosine sinc.
- Bugfix: symmetry_plane was always using Sinc interpolation due to a
    malformed switch(){} block
- Bugfix: warp tool inverted affine/rigid transformation provided using
    "--initial" command line switch (Issue #26).

- Internal: check whether compiler supports variable-sized automatic arrays.
    This used to be hard-coded based on selected compiler versions 
    (Issue #23).
- Internal: introduced igsVolumeAxesHash class (Issue #19)
- Internal: obsoleted igsVolume::GetDeltaArray() member
- Internal: defined default window size=5 for Sinc interpolators
- Internal: replaced some calls to igsVolume::ProbeNoXformXXX with generic
    volume interpolator object use (Issue #25)
- Internal: obsoleted igsUniformVolume::ProbeNoXformCubic()
- Internal: obsoleted igsDataGrid::TricubicInterpolation()
- Internal: renamed igsDataGrid::DataSize() to GetNumberOfPixels()
- Internal: obsoleted igsVolume::GetPixelCoordinates()
- Internal: removed igsVolume::Clone() member prototypes
- Internal: obsoleted igs(Uniform)Volume::GetVoxelVolume(),
    GetAverageSpacing(), GetPointsArray(), FreePointsArray()
- Internal: obsoleted non-threaded implementation of
    igsUniformVolume::Resample() 
- Internal: obsoleted all old igsUniformVolume members and data structures
    related to igsGridLookup and igsGridElement (Issue #19)


Release IGS-2.0.2 (2008-05-13):

- Bugfix: spline warp inversion had a small index error; overall algorithm was
    still functional, but produced inconsistent results
- Bugfix: support "-xopenmp" instead of "-fopenmp" for SunStudio compiler
- Bugfix: compile problem with std namespace in <cmath> header using Sun C++
    compiler
- Bugfix: Sun C++ compiler behaves like g++ past version 4.
- Bugfix: removed "advanced" test driver shell script features to accomodate
    brain-dead sh on SunOS
- Bugfix: MPI compilation was broken
- Bugfix: reformatx/igsReformatVolume ignored manual selection of output data
    type

- Added: symmetry_plane too can now write affine alignment transformation to
   file, which we can then use to reformat multiple image channels etc.
- Added: symmetry_plane now supports sinc interpolation via generic volume
    interpolator classes
- Added: levelset tool and tests
- Added: tests for imagemath tool
- Added: tests for reformatx tool
- Added: tests for registration (rigid and warp) of label fields
- Added: tests for average_edt tool
- Added: tests for split tool
- Added: tests for overlap tool
- Added: mcwarp now also interprets "downsample==0" as "original resolution,
    no smoothing," as mcaffine already did
- Added: "one over" operator for imagemath tool

- Removed: project_backproject tool obsoleted by levelset tool
- Removed: unbundled SRI24 atlas for now

- Internal: reduced size of mrbias test data to improve test speed


Release IGS-2.0.1 (2008-04-21):

- Bugfix: numerical inversion of igsSplineWarpXform was broken and inefficient
- Bugfix: removed second GetEntropy() call in apps/statistics.cxx to fix crash
    when running without parameters
- Bugfix: igsTypedArray::GetEntropy() now takes number of histogram bins as
    "int", not "byte", to avoid crash with default number in statistics.cxx
- Bugfix: volume injection for inverse interpolation was broken
- Bugfix: Sinc interpolations in reformatx tool were broken (all returned
    partial volume interpolation instead)

- Added: CHANGELOG
- Added: Initial (still a bit broken) support for building shared libraries
- Added: "abs" operator for imagemath
- Added: test for inverse-consistent nonrigid registration with NCC metric
- Added: test for gregxform tool
- Added: SRI24 brain atlas (1mm isotropic resolution) now bundled with
    software

- Removed: autotools-based build system now fully replaced with CMake

- Internal: all entropy computations are now based on double-precision floats
- Internal: inverse interpolation now uses floating point for evolving
    reconstructed image
- Internal: use incremental mode for first mrbias test to increase code
    coverage


Release IGS-2.0.0 (2008-04-11):

This is the baseline release after changing the build system to CMake, and the
test system to CTest.
